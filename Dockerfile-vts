ARG VERSION=1.21-alpine
FROM nginx:${VERSION} AS temp

# https://github.com/vozlt/nginx-module-vts/releases
ENV VTS_VERSION 0.1.18
# https://github.com/hnlq715/nginx-vts-exporter/releases
ENV VTS_EXPORTER_VERSION 0.10.3
# nginx:alpine contains NGINX_VERSION environment variable, like so:
# ENV NGINX_VERSION 1.21.1

WORKDIR /usr/src

# Download sources
RUN echo "Downloading packages" \
  && curl -sfSL "https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz" -o nginx.tar.gz \
  && curl -sfSL "https://github.com/vozlt/nginx-module-vts/archive/v${VTS_VERSION}.tar.gz"  -o nginx-modules-vts.tar.gz \
  && curl -sfSL "https://github.com/hnlq715/nginx-vts-exporter/releases/download/v${VTS_EXPORTER_VERSION}/nginx-vts-exporter-${VTS_EXPORTER_VERSION}.linux-amd64.tar.gz" -o nginx-vts-exporter.tar.gz \
  && tar -zx -f nginx.tar.gz \
  && tar -zx -f nginx-modules-vts.tar.gz \
  && tar -zx -f nginx-vts-exporter.tar.gz \
  && rm nginx.tar.gz nginx-modules-vts.tar.gz nginx-vts-exporter.tar.gz \
  && cp /usr/src/nginx-vts-exporter-$VTS_EXPORTER_VERSION.linux-amd64/nginx-vts-exporter /usr/bin/nginx-vts-exporter

COPY src /usr/src/ngx_http_websocket_stat_module
# For latest build deps, see https://github.com/nginxinc/docker-nginx/blob/master/mainline/alpine/Dockerfile
# add compilation env, build required C based gems
RUN apk add --no-cache --virtual .build-deps \
    gcc \
    libc-dev \
    make \
    openssl-dev \
    openssl \
    pcre-dev \
    pcre \
    zlib-dev \
    linux-headers \
    curl \
    gnupg \
    libxslt-dev \
    gd-dev \
    geoip-dev \
    build-base \
    libressl-dev \
    libressl \
    libbz2 \
    ca-certificates \
  && cd /usr/src/nginx-$NGINX_VERSION \
  && ./configure \
    --prefix=/usr/share/nginx \
    --sbin-path=/usr/sbin/nginx \
    --conf-path=/etc/nginx/nginx.conf \
    --error-log-path=stderr \
    --http-log-path=/dev/stdout \
    --pid-path=/var/run/nginx.pid \
    --lock-path=/var/run/nginx.lock \
    --http-client-body-temp-path=/var/cache/nginx/client_temp \
    --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
    --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
    --user=nginx \
    --group=nginx \
    --add-module=/usr/src/ngx_http_websocket_stat_module \
    --add-module=/usr/src/nginx-module-vts-$VTS_VERSION \
    --with-http_addition_module \
    --with-http_auth_request_module \
    --with-http_gunzip_module \
    --with-http_gzip_static_module \
    --with-http_realip_module \
    --with-http_ssl_module \
    --with-http_stub_status_module \
    --with-http_sub_module \
    --with-http_v2_module \
    --with-threads \
    --with-stream \
    --with-stream_ssl_module \
    --with-stream_ssl_module \
    --without-http_memcached_module \
    --without-mail_pop3_module \
    --without-mail_imap_module \
    --without-mail_smtp_module \
    --with-pcre-jit \
    --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security' \
    --with-ld-opt='-Wl,-z,relro -Wl,--as-needed' \
  && make -j$(getconf _NPROCESSORS_ONLN) \
  && make install \
  && echo "Cleaning packages" \
  $$ cd .. && rm -rf /usr/src/nginx-$NGINX_VERSION \
  && rm -rf /usr/src/nginx-vts-exporter-$VTS_EXPORTER_VERSION.linux-amd64 \
  && rm -rf /usr/src/ngx_http_websocket_stat_module \
  \
  # Bring in gettext so we can get `envsubst`, then throw
  # the rest away. To do this, we need to install `gettext`
  # then move `envsubst` out of the way so `gettext` can
  # be deleted completely, then move `envsubst` back.
  && apk add --no-cache --virtual .gettext gettext \
  && mv /usr/bin/envsubst /tmp/ \
  \
  && runDeps="$( \
    scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \
    | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
    | sort -u \
    | xargs -r apk info --installed \
    | sort -u \
  )" \
  && apk add --no-cache --virtual .nginx-rundeps $runDeps \
  && apk del .build-deps \
  && apk del .gettext \
  && mv /tmp/envsubst /usr/local/bin/ \
  \
  # forward request and error logs to docker log collector
  && ln -sf /dev/stdout /var/log/nginx/access.log \
  && ln -sf /dev/stderr /var/log/nginx/error.log \
  && if ! [ -d /var/cache/nginx ]; then mkdir /var/cache/nginx; fi \
  && rm /etc/nginx/conf.d/default*

COPY docker/etc/nginx/nginx-vts.conf /etc/nginx/nginx.conf
COPY docker/run.sh /run.sh

WORKDIR /

EXPOSE 80 443

STOPSIGNAL SIGTERM

CMD ["/run.sh"]
