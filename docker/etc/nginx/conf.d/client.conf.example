server {
    listen       80 default_server;
    server_name  _;
    access_log off;

    # ssl_certificate     /etc/nginx/certs/$ENV/cert.pem;
    # ssl_certificate_key /etc/nginx/certs/$ENV/cert.key;
    # ssl_protocols       TLSv1.1 TLSv1.2;
    # ssl_prefer_server_ciphers on;
    # ssl_ciphers         EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ## ssl_ciphers      HIGH:!aNULL:!MD5:EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    add_header Cache-Control no-store;

    location /health {
        default_type application/json;
        return 200 '{"status":"OK"}';
    }

    location /basic_status {
        stub_status;
    }

    location /ws_status {
        ws_log /dev/stdout;
        ws_stat;
    }

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri @rewrites;
    }

    location /api {
        access_log /dev/stdout;
        error_log /dev/stdout info;

        location /api/ws {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 75s;
        }

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        rewrite    /api/(.*) /$1 break;
        proxy_pass http://api;
        proxy_redirect off;
    }

    location @rewrites {
        rewrite ^/health$ /health.json last;
        rewrite ^(.+)$ /index.html last;
    }
}